extends _index.pug

block state
  - const title = 'Rect \xB7 Text Editor'
  - const scripts = ['../text-editor/index.min.js', 'index.min.js']

block script
  script
    | TE.mirror = TE.Rect.mirror;
    | TE.prototype.rect = TE.Rect.rect;
    |
    | const editor = new TE(document.querySelector('textarea'));

block content
  main
    p: textarea(spellcheck='false') abcdef
    p: button(onclick='alert(JSON.stringify(editor.rect(), null, 2));') Inspect
    h2 Examples
    ul
      li: a(href='tweak/caret.html' target='_blank') Custom Caret Example
      li Floating Tools
      li Sharing Tools
    h2 Usage
    h4 Browser
    pre: code
      | &lt;script src="#[a(href='../text-editor/index.min.js' target='_blank') ./text-editor/index.min.js]"&gt;&lt;/script&gt;
      | &lt;script src="#[a(href='index.min.js' target='_blank') ./text-editor.rect/index.min.js]"&gt;&lt;/script&gt;
      | &lt;script&gt;
      | TE.mirror = TE.Rect.mirror;
      | TE.prototype.rect = TE.Rect.rect;
      | &lt;/script&gt;
    h4 CommonJS
    pre: code
      | const TE = require('@taufik-nurrohman/text-editor');
      | const {mirror, rect} = require('@taufik-nurrohman/text-editor.rect');
      |
      | TE.mirror = mirror;
      | TE.prototype.rect = rect;
    h4 ECMAScript
    pre: code
      | import TE from '@taufik-nurrohman/text-editor';
      | import {mirror, rect} from '@taufik-nurrohman/text-editor.rect';
      |
      | TE.mirror = mirror;
      | TE.prototype.rect = rect;
    h2 Methods and Properties
    h3 TE.mirror
    p Return a #[code &lt;div&gt;] element to mirror the #[code &lt;textarea&gt;].
    h3 editor.rect(key)
    p Get current selection offset and dimension data.
    pre: code
      | // [&lt;selection start&gt;, &lt;selection end&gt;, &lt;selection as rectangle&gt;, &lt;the editor&gt;]
      |
      | // x: left
      | // y: top
      | // w: width
      | // h: height
